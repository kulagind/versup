"use strict";var __awaiter=this&&this.__awaiter||function(l,s,t,o){function a(n){return n instanceof t?n:new t(function(e){e(n)})}return new(t||(t=Promise))(function(n,e){function r(u){try{i(o.next(u))}catch(f){e(f)}}function c(u){try{i(o.throw(u))}catch(f){e(f)}}function i(u){u.done?n(u.value):a(u.value).then(r,c)}i((o=o.apply(l,s||[])).next())})};System.register("enums/patch-strategy",[],function(l,s){"use strict";var t=s&&s.id;return{setters:[],execute:function(){}}}),System.register("classes/version",["shelljs"],function(l,s){"use strict";var t,o,a=s&&s.id;return{setters:[function(n){t=n}],execute:function(){o=class{constructor(e){this.regexp=/([0-9]+)\.([0-9]+)\.([0-9]+)/g,this._patch=0,this._minor=0,this._major=0,this._prefix="",this._postfix="",this.parse(e?.lastTag),this.update(e?.patcher)}get patch(){return this._patch}get minor(){return this._minor}get major(){return this._major}get postfix(){return this._postfix}get prefix(){return this._prefix}toString(){return`${this.prefix}${this.major}.${this.minor}.${this.patch}${this.postfix}`}parse(e="0.0.0"){const r=this.regexp.exec(e);if(!r){t.echo(`Version parsing from '${e}' failed`);return}if(this._major=+r?.[1],this._minor=+r?.[2],this._patch=+r?.[3],isNaN(this._patch)||isNaN(this._minor)||isNaN(this._major)){t.echo(`Found incorrect version '${this._major}.${this._minor}.${this._patch}' in the tag '${e}'`);return}const[c,i]=e.split(`${this._major}.${this._minor}.${this._patch}`);this._prefix=c??"",this._postfix=i??""}update(e){switch(t.echo("Current version:",this.toString()),e){case"minor":this._minor+=1;break;case"major":this._major+=1;break;case"patch":default:this._patch+=1;break}t.echo("Next version:",this.toString())}},l("Version",o)}}}),System.register("interfaces/config.interface",["zod","classes/version"],function(l,s){"use strict";var t,o,a,n=s&&s.id;return{setters:[function(e){t=e},function(e){o=e}],execute:function(){l("Config",a=t.z.object({deleteIfExists:t.z.boolean().optional(),write:t.z.object({fileName:t.z.string(),getContent:t.z.function().args(t.z.instanceof(o.Version)).returns(t.z.string())}).optional(),patch:t.z.instanceof(RegExp).optional(),minor:t.z.instanceof(RegExp).optional(),major:t.z.instanceof(RegExp).optional()}))}}}),System.register("enums/variable",[],function(l,s){"use strict";var t=s&&s.id;return{setters:[],execute:function(){}}}),System.register("classes/git",["shelljs"],function(l,s){"use strict";var t,o,a=s&&s.id;return{setters:[function(n){t=n}],execute:function(){o=class{constructor(e){this.config=e}pushTag(){const e=process.env.REMOTE_WITH_TOKEN;e||(t.echo("Variable REMOTE_WITH_TOKEN is not defined"),t.exit(1)),t.exec('git config --global user.email "bot@gmail.com"'),t.exec('git config --global user.name "Bot"'),t.exec("git remote rm origin_with_token || true"),t.exec(`git remote add origin_with_token ${e}`),t.exec("git push origin_with_token --push-option=ci.skip --tags")}createTag(e){var r;let c=t.exec(`git tag ${e}`);c.code!==0&&(t.echo(`Version ${e} already exists`),!((r=this.config)===null||r===void 0)&&r.deleteIfExists&&(this.delete(e),c=t.exec(`git tag ${e}`)),c.code!==0&&t.exit(1))}getLastTag(){const e=t.exec("git describe --tags --abbrev=0");if(e.code!==0)return;const r=e.stdout.split(`
`).filter(c=>c.trim().length);return r.length?r[0]:void 0}getCommmitMessages(){var e;const r=t.exec("git describe --tags --abbrev=0 2>/dev/null");let c;return r.code!==0?c=t.exec("git log -1 --pretty=%B"):c=t.exec(`git log ${r.stdout}^~1..HEAD --pretty=%B`),((e=c.stdout)===null||e===void 0?void 0:e.split(`
`))||[]}delete(e){t.exec(`git tag -d ${e}`)}},l("Git",o)}}}),System.register("utils/read-config",["interfaces/config.interface","path","shelljs"],function(l,s){"use strict";var t,o,a,n,e,r=s&&s.id;function c(){return __awaiter(this,void 0,void 0,function*(){var i;try{const u=o.default.join(process.cwd(),(i=process.env.VER_CONFIG_PATH)!==null&&i!==void 0?i:n);a.echo(`Reading a configuration from '${u}'`);let f=yield s.import(u);return f=t.Config.parse(f),a.echo("Configuration has found:",JSON.stringify(f)),f}catch(u){return a.echo("Import configuration failed:",JSON.stringify(u)),a.echo("Used default configuration:",JSON.stringify(e)),e}})}return l("readConfig",c),{setters:[function(i){t=i},function(i){o=i},function(i){a=i}],execute:function(){n="version.config.js",e={deleteIfExists:!0}}}}),System.register("utils/resolve-strategy",["shelljs"],function(l,s){"use strict";var t,o=s&&s.id;function a(n,e){try{switch(!0){case(e&&n.major&&n.major.test(e)):return"major";case(e&&n.minor&&n.minor.test(e)):return"minor";case(e&&n.patch&&n.patch.test(e)):default:return"patch"}}catch(r){return t.echo("Error while defining patch strategy:",JSON.stringify(r)),"patch"}}return l("resolveStrategy",a),{setters:[function(n){t=n}],execute:function(){}}}),System.register("utils/write-file",["fs/promises","path","shelljs"],function(l,s){"use strict";var t,o,a,n=s&&s.id;function e(r,c){return __awaiter(this,arguments,void 0,function*({write:i},u){if(i)try{const f=o.join(process.cwd(),i.fileName);return a.echo("Writing a file:",f),t.default.writeFile(f,i.getContent(u))}catch(f){a.echo("Error while writing a file:",JSON.stringify(f))}})}return l("writeFile",e),{setters:[function(r){t=r},function(r){o=r},function(r){a=r}],execute:function(){}}}),System.register("index",["classes/version","shelljs","classes/git","utils/read-config","utils/resolve-strategy","utils/write-file"],function(l,s){"use strict";var t,o,a,n,e,r,c=s&&s.id;return{setters:[function(i){t=i},function(i){o=i},function(i){a=i},function(i){n=i},function(i){e=i},function(i){r=i}],execute:function(){__awaiter(void 0,void 0,void 0,function*(){o.which("git")||(o.echo("This script requires git cli"),o.exit(1));const i=yield n.readConfig(),u=new a.Git(i),f=u.getLastTag(),h=u.getCommmitMessages(),g=new t.Version({lastTag:f,patcher:e.resolveStrategy(i,h?.[0])});u.createTag(g.toString()),u.pushTag(),i.write&&(yield r.writeFile(i,g))})}}});
